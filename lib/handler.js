/** * Created by lzq on 2017/11/6. * 匹配到给定 模式 的文件 会利用handlebars模版引擎对其进行渲染，输出到给定的路径下； */const handlebars = require('handlebars');const metalsmith = require('metalsmith');const fileter = require('./fileter.js');/** @param {Object} context* @param {String} templateType* @param {String} outputDir* */function gh(data, filter, templateDir, outputDir){    return new Promise(function(resolve,reject){        // metalsmith()传入一个绝对路径        metalsmith(templateDir).source('./').destination(outputDir)  // ./build            .use(fileter(filter))            .use(function(files, metalsmith, done){  // source默认值是 "./src"                for(let key in files){                    // 如此就可以将所有的模版中的js、json、vue文件进行处理了                    console.log(key);                    if(/(.+\/)*(.+\.(js|json|vue))/.test(key)){   // template/package.json   template/config/index.js                        let htmldata = files[key].contents.toString();  // buffer转换为字符串                        // 注册lint块                        handlebars.registerHelper('lint',function(v1,options){                            if(v1 === 'yar'){                                options.inverse(this);  // 取消，不渲染                            }else{                                return options.fn(this);  // 确认，渲染                            }                        });                        let template = handlebars.compile(htmldata);                        let html = template(data);                        files[key].contents = new Buffer(html);                    }                }                done();            }).build(function(err) {  // build process                if (err) throw err;  // error handling is required            });        resolve();    });}module.exports = gh;
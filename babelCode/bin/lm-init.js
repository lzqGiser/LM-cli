#!/usr/bin/env nodeimport interAsk from '../lib/ask';import path from "path";import downGit from '../lib/downloadGit'import devConfig from '../config/repository'import userHome from 'user-home'import gh from '../lib/handler'import localPath from '../lib/local-path'const templatePath = path.join(userHome,'Documents/.lmTemplate');const lstemp = path.join(__dirname,'../tmp/template')   // 临时work目录，最终要替换成上面的内容const lstempp = path.join(__dirname,'../tmp/build')   // 临时work目录，最终要替换成上面的内容const lstempout = path.join(userHome,'Documents/.build')   // 临时work目录，最终要替换成上面的内容console.log(localPath.isLoaclPath(templatePath))console.log(localPath.getTemPath(lstemp))console.log(templatePath)console.log('---------------');const destinationDir = path.join(__dirname);let meta;// console.log(lstemp);generate(templatePath,lstempout);// generate(lstemp,lstempp);// 稍后 templatePath 应该替换掉 tmpasync function generate(workDir, outputDir){    let msgg = await downGit('github:lzqGiser/vue-npm-con',workDir);    console.log(msgg);    let msg = true;    console.log(workDir+'/meta')    console.log('----------')    msg ? meta = require(workDir+'/meta') : meta = null;    // meta = require(workDir+'/meta.js')    console.log(meta)    console.log('----------')    let questions = meta.questions;    let filter = meta.filter;    let answer = await interAsk(meta.questions);    console.log(answer)    Object.keys(answer).forEach((key)=>{        Object.keys(filter).forEach((file)=>{            if(key === filter[file] ){                filter[file] = answer[key]            }        })    })    console.log(answer);    console.log(filter)    let ghMsg = await gh(answer,filter,workDir,outputDir)    // console.log(ghMsg)}